// This implementation is taken from Crypto++ library.
// Author: Wei Dai.
// This code is placed in the public domain.

// Modified for use in cppcrypto.

#include <stdint.h>
#include <stdlib.h>

namespace cppcrypto
{
        extern const __attribute__((aligned(16))) uint32_t SHA256_K[64];
}



void X86_SHA256_HashBlocks(uint32_t *state, const uint32_t *data, size_t len)
{
 __asm__ __volatile__
 (



 ".intel_syntax noprefix;"
  "push ebx" ";"


 "push ebp" ";"
 "mov ebx" ", " "esp" ";"
 "and esp" ", " "-16" ";"
 "sub esp" ", " "8*4 + 16*4 + 4*4" ";"
 "push ebx" ";"

 "mov [esp+4+8*4+16*4+1*4]" ", " "ecx" ";"
 "mov [esp+4+8*4+16*4+2*4]" ", " "edx" ";"
 "lea eax" ", " "[edi + edx]" ";"
 "mov [esp+4+8*4+16*4+3*4]" ", " "eax" ";"
 "mov [esp+4+8*4+16*4+0*4]" ", " "esi" ";"



 "test edi" ", " "1" ";"
 "jnz" " " "2" "f" ";"
 "dec DWORD PTR [esp+4+8*4+16*4+0*4]" ";"

 "movdqa xmm0" ", " "[ecx+0*16]" ";"
 "movdqa xmm1" ", " "[ecx+1*16]" ";"




 "jmp" " " "0" "f" ";"

 "\n" "2" ":"
 "mov esi" ", " "ecx" ";"
 "lea edi" ", " "[esp+4+((1024+7-(0+7))-((1024+7-(0+7))/(8))*(8))*4]" ";"
 "mov ecx" ", " "8" ";"
 "rep movsd" ";"
 "mov esi" ", " "[esp+4+8*4+16*4+0*4]" ";"
 "jmp" " " "3" "f" ";"



 "\n" "0" ":"
 "movdqa [esp+4+((1024+7-(0+3))-((1024+7-(0+3))/(8))*(8))*4]" ", " "xmm1" ";"
 "movdqa [esp+4+((1024+7-(0+7))-((1024+7-(0+7))/(8))*(8))*4]" ", " "xmm0" ";"


 "\n" "3" ":"

 "sub esi" ", " "48*4" ";"
 "mov ebx" ", " "[edx+0*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(0*(1+0)+0))-((1024+15-(0*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+1*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(1*(1+0)+0))-((1024+15-(1*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+2*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(2*(1+0)+0))-((1024+15-(2*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+3*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(3*(1+0)+0))-((1024+15-(3*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";"
 "mov ebx" ", " "[edx+4*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(4*(1+0)+0))-((1024+15-(4*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+5*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(5*(1+0)+0))-((1024+15-(5*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+6*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(6*(1+0)+0))-((1024+15-(6*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+7*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(7*(1+0)+0))-((1024+15-(7*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";"

 "mov ebx" ", " "[edx+8*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(8*(1+0)+0))-((1024+15-(8*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+9*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(9*(1+0)+0))-((1024+15-(9*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+10*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(10*(1+0)+0))-((1024+15-(10*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+11*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(11*(1+0)+0))-((1024+15-(11*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";"
 "mov ebx" ", " "[edx+12*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(12*(1+0)+0))-((1024+15-(12*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+13*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(13*(1+0)+0))-((1024+15-(13*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+14*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(14*(1+0)+0))-((1024+15-(14*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";" "mov ebx" ", " "[edx+15*4]" ";" "bswap ebx" ";" "mov [esp+4+8*4+((1024+15-(15*(1+0)+0))-((1024+15-(15*(1+0)+0))/(16))*(16))*4]" ", " "ebx" ";"

 "mov edi" ", " "[esp+4+((1024+7-(0+3))-((1024+7-(0+3))/(8))*(8))*4]" ";"
 "mov eax" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";"
 "xor eax" ", " "[esp+4+((1024+7-(0+5))-((1024+7-(0+5))/(8))*(8))*4]" ";"
 "mov ecx" ", " "[esp+4+((1024+7-(0+7))-((1024+7-(0+7))/(8))*(8))*4]" ";"

 "mov edx" ", " "[esp+4+((1024+7-(0+2))-((1024+7-(0+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(0+1))-((1024+7-(0+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(0+1))-((1024+7-(0+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(0)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(0))-((1024+15-(0))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(0))-((1024+7-(0))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(0+4))-((1024+7-(0+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(0+4))-((1024+7-(0+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(0))-((1024+7-(0))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(1+2))-((1024+7-(1+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(1+1))-((1024+7-(1+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(1+1))-((1024+7-(1+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(1)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(1))-((1024+15-(1))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(1))-((1024+7-(1))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(1+6))-((1024+7-(1+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(1+6))-((1024+7-(1+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(1+4))-((1024+7-(1+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(1+4))-((1024+7-(1+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(1))-((1024+7-(1))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(2+2))-((1024+7-(2+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(2+1))-((1024+7-(2+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(2+1))-((1024+7-(2+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(2)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(2))-((1024+15-(2))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(2))-((1024+7-(2))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(2+6))-((1024+7-(2+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(2+6))-((1024+7-(2+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(2+4))-((1024+7-(2+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(2+4))-((1024+7-(2+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(2))-((1024+7-(2))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(3+2))-((1024+7-(3+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(3+1))-((1024+7-(3+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(3+1))-((1024+7-(3+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(3)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(3))-((1024+15-(3))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(3))-((1024+7-(3))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(3+6))-((1024+7-(3+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(3+6))-((1024+7-(3+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(3+4))-((1024+7-(3+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(3+4))-((1024+7-(3+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(3))-((1024+7-(3))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(4+2))-((1024+7-(4+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(4+1))-((1024+7-(4+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(4+1))-((1024+7-(4+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(4)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(4))-((1024+15-(4))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(4))-((1024+7-(4))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(4+6))-((1024+7-(4+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(4+6))-((1024+7-(4+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(4+4))-((1024+7-(4+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(4+4))-((1024+7-(4+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(4))-((1024+7-(4))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(5+2))-((1024+7-(5+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(5+1))-((1024+7-(5+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(5+1))-((1024+7-(5+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(5)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(5))-((1024+15-(5))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(5))-((1024+7-(5))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(5+6))-((1024+7-(5+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(5+6))-((1024+7-(5+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(5+4))-((1024+7-(5+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(5+4))-((1024+7-(5+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(5))-((1024+7-(5))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(6+2))-((1024+7-(6+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(6+1))-((1024+7-(6+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(6+1))-((1024+7-(6+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(6)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(6))-((1024+15-(6))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(6))-((1024+7-(6))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(6+6))-((1024+7-(6+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(6+6))-((1024+7-(6+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(6+4))-((1024+7-(6+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(6+4))-((1024+7-(6+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(6))-((1024+7-(6))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(7+2))-((1024+7-(7+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(7+1))-((1024+7-(7+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(7+1))-((1024+7-(7+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(7)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(7))-((1024+15-(7))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(7))-((1024+7-(7))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(7+6))-((1024+7-(7+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(7+6))-((1024+7-(7+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(7+4))-((1024+7-(7+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(7+4))-((1024+7-(7+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(7))-((1024+7-(7))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(8+2))-((1024+7-(8+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(8+1))-((1024+7-(8+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(8+1))-((1024+7-(8+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(8)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(8))-((1024+15-(8))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(8))-((1024+7-(8))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(8+6))-((1024+7-(8+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(8+6))-((1024+7-(8+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(8+4))-((1024+7-(8+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(8+4))-((1024+7-(8+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(8))-((1024+7-(8))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(9+2))-((1024+7-(9+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(9+1))-((1024+7-(9+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(9+1))-((1024+7-(9+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(9)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(9))-((1024+15-(9))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(9))-((1024+7-(9))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(9+6))-((1024+7-(9+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(9+6))-((1024+7-(9+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(9+4))-((1024+7-(9+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(9+4))-((1024+7-(9+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(9))-((1024+7-(9))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(10+2))-((1024+7-(10+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(10+1))-((1024+7-(10+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(10+1))-((1024+7-(10+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(10)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(10))-((1024+15-(10))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(10))-((1024+7-(10))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(10+6))-((1024+7-(10+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(10+6))-((1024+7-(10+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(10+4))-((1024+7-(10+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(10+4))-((1024+7-(10+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(10))-((1024+7-(10))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(11+2))-((1024+7-(11+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(11+1))-((1024+7-(11+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(11+1))-((1024+7-(11+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(11)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(11))-((1024+15-(11))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(11))-((1024+7-(11))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(11+6))-((1024+7-(11+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(11+6))-((1024+7-(11+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(11+4))-((1024+7-(11+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(11+4))-((1024+7-(11+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(11))-((1024+7-(11))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(12+2))-((1024+7-(12+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(12+1))-((1024+7-(12+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(12+1))-((1024+7-(12+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(12)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(12))-((1024+15-(12))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(12))-((1024+7-(12))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(12+6))-((1024+7-(12+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(12+6))-((1024+7-(12+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(12+4))-((1024+7-(12+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(12+4))-((1024+7-(12+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(12))-((1024+7-(12))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(13+2))-((1024+7-(13+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(13+1))-((1024+7-(13+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(13+1))-((1024+7-(13+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(13)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(13))-((1024+15-(13))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(13))-((1024+7-(13))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(13+6))-((1024+7-(13+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(13+6))-((1024+7-(13+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(13+4))-((1024+7-(13+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(13+4))-((1024+7-(13+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(13))-((1024+7-(13))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(14+2))-((1024+7-(14+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(14+1))-((1024+7-(14+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(14+1))-((1024+7-(14+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "add edx" ", " "[esi+(14)*4]" ";" "add edx" ", " "[esp+4+8*4+((1024+15-(14))-((1024+15-(14))/(16))*(16))*4]" ";" "add edx" ", " "[esp+4+((1024+7-(14))-((1024+7-(14))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(14+6))-((1024+7-(14+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(14+6))-((1024+7-(14+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(14+4))-((1024+7-(14+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(14+4))-((1024+7-(14+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(14))-((1024+7-(14))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(15+2))-((1024+7-(15+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(15+1))-((1024+7-(15+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(15+1))-((1024+7-(15+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "add edi" ", " "[esi+(15)*4]" ";" "add edi" ", " "[esp+4+8*4+((1024+15-(15))-((1024+15-(15))/(16))*(16))*4]" ";" "add edi" ", " "[esp+4+((1024+7-(15))-((1024+7-(15))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(15+6))-((1024+7-(15+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(15+6))-((1024+7-(15+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(15+4))-((1024+7-(15+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(15+4))-((1024+7-(15+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(15))-((1024+7-(15))/(8))*(8))*4]" ", " "ecx" ";"

 "\n" "1" ":"
 "add esi" ", " "4*16" ";"
 "mov edx" ", " "[esp+4+((1024+7-(0+2))-((1024+7-(0+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(0+1))-((1024+7-(0+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(0+1))-((1024+7-(0+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((0)-2))-((1024+15-((0)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((0)-15))-((1024+15-((0)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((0)-7))-((1024+15-((0)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(0))-((1024+15-(0))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(0)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(0))-((1024+7-(0))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(0))-((1024+15-(0))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(0+4))-((1024+7-(0+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(0+4))-((1024+7-(0+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(0))-((1024+7-(0))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(1+2))-((1024+7-(1+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(1+1))-((1024+7-(1+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(1+1))-((1024+7-(1+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((1)-2))-((1024+15-((1)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((1)-15))-((1024+15-((1)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((1)-7))-((1024+15-((1)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(1))-((1024+15-(1))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(1)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(1))-((1024+7-(1))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(1))-((1024+15-(1))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(1+6))-((1024+7-(1+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(1+6))-((1024+7-(1+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(1+4))-((1024+7-(1+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(1+4))-((1024+7-(1+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(1))-((1024+7-(1))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(2+2))-((1024+7-(2+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(2+1))-((1024+7-(2+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(2+1))-((1024+7-(2+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((2)-2))-((1024+15-((2)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((2)-15))-((1024+15-((2)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((2)-7))-((1024+15-((2)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(2))-((1024+15-(2))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(2)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(2))-((1024+7-(2))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(2))-((1024+15-(2))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(2+6))-((1024+7-(2+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(2+6))-((1024+7-(2+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(2+4))-((1024+7-(2+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(2+4))-((1024+7-(2+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(2))-((1024+7-(2))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(3+2))-((1024+7-(3+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(3+1))-((1024+7-(3+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(3+1))-((1024+7-(3+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((3)-2))-((1024+15-((3)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((3)-15))-((1024+15-((3)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((3)-7))-((1024+15-((3)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(3))-((1024+15-(3))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(3)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(3))-((1024+7-(3))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(3))-((1024+15-(3))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(3+6))-((1024+7-(3+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(3+6))-((1024+7-(3+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(3+4))-((1024+7-(3+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(3+4))-((1024+7-(3+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(3))-((1024+7-(3))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(4+2))-((1024+7-(4+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(4+1))-((1024+7-(4+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(4+1))-((1024+7-(4+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((4)-2))-((1024+15-((4)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((4)-15))-((1024+15-((4)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((4)-7))-((1024+15-((4)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(4))-((1024+15-(4))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(4)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(4))-((1024+7-(4))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(4))-((1024+15-(4))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(4+6))-((1024+7-(4+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(4+6))-((1024+7-(4+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(4+4))-((1024+7-(4+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(4+4))-((1024+7-(4+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(4))-((1024+7-(4))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(5+2))-((1024+7-(5+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(5+1))-((1024+7-(5+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(5+1))-((1024+7-(5+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((5)-2))-((1024+15-((5)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((5)-15))-((1024+15-((5)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((5)-7))-((1024+15-((5)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(5))-((1024+15-(5))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(5)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(5))-((1024+7-(5))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(5))-((1024+15-(5))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(5+6))-((1024+7-(5+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(5+6))-((1024+7-(5+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(5+4))-((1024+7-(5+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(5+4))-((1024+7-(5+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(5))-((1024+7-(5))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(6+2))-((1024+7-(6+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(6+1))-((1024+7-(6+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(6+1))-((1024+7-(6+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((6)-2))-((1024+15-((6)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((6)-15))-((1024+15-((6)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((6)-7))-((1024+15-((6)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(6))-((1024+15-(6))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(6)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(6))-((1024+7-(6))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(6))-((1024+15-(6))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(6+6))-((1024+7-(6+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(6+6))-((1024+7-(6+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(6+4))-((1024+7-(6+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(6+4))-((1024+7-(6+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(6))-((1024+7-(6))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(7+2))-((1024+7-(7+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(7+1))-((1024+7-(7+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(7+1))-((1024+7-(7+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((7)-2))-((1024+15-((7)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((7)-15))-((1024+15-((7)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((7)-7))-((1024+15-((7)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(7))-((1024+15-(7))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(7)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(7))-((1024+7-(7))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(7))-((1024+15-(7))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(7+6))-((1024+7-(7+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(7+6))-((1024+7-(7+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(7+4))-((1024+7-(7+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(7+4))-((1024+7-(7+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(7))-((1024+7-(7))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(8+2))-((1024+7-(8+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(8+1))-((1024+7-(8+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(8+1))-((1024+7-(8+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((8)-2))-((1024+15-((8)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((8)-15))-((1024+15-((8)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((8)-7))-((1024+15-((8)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(8))-((1024+15-(8))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(8)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(8))-((1024+7-(8))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(8))-((1024+15-(8))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(8+6))-((1024+7-(8+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(8+6))-((1024+7-(8+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(8+4))-((1024+7-(8+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(8+4))-((1024+7-(8+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(8))-((1024+7-(8))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(9+2))-((1024+7-(9+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(9+1))-((1024+7-(9+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(9+1))-((1024+7-(9+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((9)-2))-((1024+15-((9)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((9)-15))-((1024+15-((9)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((9)-7))-((1024+15-((9)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(9))-((1024+15-(9))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(9)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(9))-((1024+7-(9))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(9))-((1024+15-(9))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(9+6))-((1024+7-(9+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(9+6))-((1024+7-(9+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(9+4))-((1024+7-(9+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(9+4))-((1024+7-(9+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(9))-((1024+7-(9))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(10+2))-((1024+7-(10+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(10+1))-((1024+7-(10+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(10+1))-((1024+7-(10+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((10)-2))-((1024+15-((10)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((10)-15))-((1024+15-((10)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((10)-7))-((1024+15-((10)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(10))-((1024+15-(10))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(10)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(10))-((1024+7-(10))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(10))-((1024+15-(10))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(10+6))-((1024+7-(10+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(10+6))-((1024+7-(10+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(10+4))-((1024+7-(10+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(10+4))-((1024+7-(10+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(10))-((1024+7-(10))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(11+2))-((1024+7-(11+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(11+1))-((1024+7-(11+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(11+1))-((1024+7-(11+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((11)-2))-((1024+15-((11)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((11)-15))-((1024+15-((11)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((11)-7))-((1024+15-((11)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(11))-((1024+15-(11))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(11)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(11))-((1024+7-(11))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(11))-((1024+15-(11))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(11+6))-((1024+7-(11+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(11+6))-((1024+7-(11+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(11+4))-((1024+7-(11+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(11+4))-((1024+7-(11+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(11))-((1024+7-(11))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(12+2))-((1024+7-(12+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(12+1))-((1024+7-(12+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(12+1))-((1024+7-(12+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((12)-2))-((1024+15-((12)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((12)-15))-((1024+15-((12)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((12)-7))-((1024+15-((12)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(12))-((1024+15-(12))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(12)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(12))-((1024+7-(12))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(12))-((1024+15-(12))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(12+6))-((1024+7-(12+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(12+6))-((1024+7-(12+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(12+4))-((1024+7-(12+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(12+4))-((1024+7-(12+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(12))-((1024+7-(12))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(13+2))-((1024+7-(13+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(13+1))-((1024+7-(13+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(13+1))-((1024+7-(13+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((13)-2))-((1024+15-((13)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((13)-15))-((1024+15-((13)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((13)-7))-((1024+15-((13)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(13))-((1024+15-(13))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(13)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(13))-((1024+7-(13))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(13))-((1024+15-(13))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(13+6))-((1024+7-(13+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(13+6))-((1024+7-(13+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(13+4))-((1024+7-(13+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(13+4))-((1024+7-(13+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(13))-((1024+7-(13))/(8))*(8))*4]" ", " "ecx" ";"
 "mov edx" ", " "[esp+4+((1024+7-(14+2))-((1024+7-(14+2))/(8))*(8))*4]" ";" "xor edx" ", " "[esp+4+((1024+7-(14+1))-((1024+7-(14+1))/(8))*(8))*4]" ";" "and edx" ", " "edi" ";" "xor edx" ", " "[esp+4+((1024+7-(14+1))-((1024+7-(14+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edi" ";" "ror edi" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edi" ";" "ror edi" ", " "5" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((14)-2))-((1024+15-((14)-2))/(16))*(16))*4]" ";" "mov edi" ", " "[esp+4+8*4+((1024+15-((14)-15))-((1024+15-((14)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((14)-7))-((1024+15-((14)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edi" ";" "shr ebp" ", " "3" ";" "ror edi" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(14))-((1024+15-(14))/(16))*(16))*4]" ";" "xor ebp" ", " "edi" ";" "add edx" ", " "[esi+(14)*4]" ";" "ror edi" ", " "11" ";" "add edx" ", " "[esp+4+((1024+7-(14))-((1024+7-(14))/(8))*(8))*4]" ";" "xor ebp" ", " "edi" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(14))-((1024+15-(14))/(16))*(16))*4]" ", " "ebp" ";" "add edx" ", " "ebp" ";" "mov ebx" ", " "ecx" ";" "xor ecx" ", " "[esp+4+((1024+7-(14+6))-((1024+7-(14+6))/(8))*(8))*4]" ";" "and eax" ", " "ecx" ";" "xor eax" ", " "[esp+4+((1024+7-(14+6))-((1024+7-(14+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add eax" ", " "edx" ";" "add edx" ", " "[esp+4+((1024+7-(14+4))-((1024+7-(14+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(14+4))-((1024+7-(14+4))/(8))*(8))*4]" ", " "edx" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add eax" ", " "ebp" ";" "mov [esp+4+((1024+7-(14))-((1024+7-(14))/(8))*(8))*4]" ", " "eax" ";"
 "mov edi" ", " "[esp+4+((1024+7-(15+2))-((1024+7-(15+2))/(8))*(8))*4]" ";" "xor edi" ", " "[esp+4+((1024+7-(15+1))-((1024+7-(15+1))/(8))*(8))*4]" ";" "and edi" ", " "edx" ";" "xor edi" ", " "[esp+4+((1024+7-(15+1))-((1024+7-(15+1))/(8))*(8))*4]" ";" "mov ebp" ", " "edx" ";" "ror edx" ", " "6" ";" "ror ebp" ", " "25" ";" "xor ebp" ", " "edx" ";" "ror edx" ", " "5" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "ebp" ";" "mov ebp" ", " "[esp+4+8*4+((1024+15-((15)-2))-((1024+15-((15)-2))/(16))*(16))*4]" ";" "mov edx" ", " "[esp+4+8*4+((1024+15-((15)-15))-((1024+15-((15)-15))/(16))*(16))*4]" ";" "mov ebx" ", " "ebp" ";" "shr ebp" ", " "10" ";" "ror ebx" ", " "17" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "xor ebx" ", " "ebp" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-((15)-7))-((1024+15-((15)-7))/(16))*(16))*4]" ";" "mov ebp" ", " "edx" ";" "shr ebp" ", " "3" ";" "ror edx" ", " "7" ";" "add ebx" ", " "[esp+4+8*4+((1024+15-(15))-((1024+15-(15))/(16))*(16))*4]" ";" "xor ebp" ", " "edx" ";" "add edi" ", " "[esi+(15)*4]" ";" "ror edx" ", " "11" ";" "add edi" ", " "[esp+4+((1024+7-(15))-((1024+7-(15))/(8))*(8))*4]" ";" "xor ebp" ", " "edx" ";" "add ebp" ", " "ebx" ";" "mov [esp+4+8*4+((1024+15-(15))-((1024+15-(15))/(16))*(16))*4]" ", " "ebp" ";" "add edi" ", " "ebp" ";" "mov ebx" ", " "eax" ";" "xor eax" ", " "[esp+4+((1024+7-(15+6))-((1024+7-(15+6))/(8))*(8))*4]" ";" "and ecx" ", " "eax" ";" "xor ecx" ", " "[esp+4+((1024+7-(15+6))-((1024+7-(15+6))/(8))*(8))*4]" ";" "mov ebp" ", " "ebx" ";" "ror ebx" ", " "2" ";" "add ecx" ", " "edi" ";" "add edi" ", " "[esp+4+((1024+7-(15+4))-((1024+7-(15+4))/(8))*(8))*4]" ";" "mov [esp+4+((1024+7-(15+4))-((1024+7-(15+4))/(8))*(8))*4]" ", " "edi" ";" "ror ebp" ", " "22" ";" "xor ebp" ", " "ebx" ";" "ror ebx" ", " "11" ";" "xor ebp" ", " "ebx" ";" "add ecx" ", " "ebp" ";" "mov [esp+4+((1024+7-(15))-((1024+7-(15))/(8))*(8))*4]" ", " "ecx" ";"
 "cmp esi" ", " "[esp+4+8*4+16*4+0*4]" ";"
 "jb" " " "1" "b" ";"

 "mov edx" ", " "[esp+4+8*4+16*4+2*4]" ";"
 "add edx" ", " "64" ";"
 "mov ebp" ", " "[esp+4+8*4+16*4+1*4]" ";"
 "mov [esp+4+8*4+16*4+2*4]" ", " "edx" ";"



 "test DWORD PTR [esp+4+8*4+16*4+0*4]" ", " "1" ";"
 "jz" " " "4" "f" ";"

 "movdqa xmm1" ", " "[ebp+1*16]" ";"
 "movdqa xmm0" ", " "[ebp+0*16]" ";"
 "paddd xmm1" ", " "[esp+4+((1024+7-(0+3))-((1024+7-(0+3))/(8))*(8))*4]" ";"
 "paddd xmm0" ", " "[esp+4+((1024+7-(0+7))-((1024+7-(0+7))/(8))*(8))*4]" ";"
 "movdqa [ebp+1*16]" ", " "xmm1" ";"
 "movdqa [ebp+0*16]" ", " "xmm0" ";"
 "cmp edx" ", " "[esp+4+8*4+16*4+3*4]" ";"
 "jb" " " "0" "b" ";"




 "jmp" " " "5" "f" ";"
 "\n" "4" ":"

 "add [ebp+0*4]" ", " "ecx" ";"
 "add [ebp+4*4]" ", " "edi" ";"
 "mov eax" ", " "[esp+4+((1024+7-(0+6))-((1024+7-(0+6))/(8))*(8))*4]" ";"
 "mov ebx" ", " "[esp+4+((1024+7-(0+5))-((1024+7-(0+5))/(8))*(8))*4]" ";"
 "mov ecx" ", " "[esp+4+((1024+7-(0+4))-((1024+7-(0+4))/(8))*(8))*4]" ";"
 "add [ebp+1*4]" ", " "eax" ";"
 "add [ebp+2*4]" ", " "ebx" ";"
 "add [ebp+3*4]" ", " "ecx" ";"
 "mov eax" ", " "[esp+4+((1024+7-(0+2))-((1024+7-(0+2))/(8))*(8))*4]" ";"
 "mov ebx" ", " "[esp+4+((1024+7-(0+1))-((1024+7-(0+1))/(8))*(8))*4]" ";"
 "mov ecx" ", " "[esp+4+((1024+7-(0))-((1024+7-(0))/(8))*(8))*4]" ";"
 "add [ebp+5*4]" ", " "eax" ";"
 "add [ebp+6*4]" ", " "ebx" ";"
 "add [ebp+7*4]" ", " "ecx" ";"
 "mov ecx" ", " "ebp" ";"
 "cmp edx" ", " "[esp+4+8*4+16*4+3*4]" ";"
 "jb" " " "2" "b" ";"

 "\n" "5" ":"



 "pop esp" ";"
 "pop ebp" ";"

  "pop ebx" ";"
 ".att_syntax prefix;"
 :
 : "c" (state), "d" (data), "S" (cppcrypto::SHA256_K+48), "D" (len)



 : "memory", "cc", "%eax"



 );

}
